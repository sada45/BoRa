ARM GAS  /tmp/ccInYcsT.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"LPC17xx_Startup.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.Reset_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	Reset_Handler
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	Reset_Handler:
  25              	.LFB0:
  26              		.file 1 "../common/LPC17xx_Startup.c"
   1:../common/LPC17xx_Startup.c **** /*
   2:../common/LPC17xx_Startup.c ****  * Copyright 2010, 2011 Michael Ossmann
   3:../common/LPC17xx_Startup.c ****  *
   4:../common/LPC17xx_Startup.c ****  * This file is part of Project Ubertooth.
   5:../common/LPC17xx_Startup.c ****  *
   6:../common/LPC17xx_Startup.c ****  * This program is free software; you can redistribute it and/or modify
   7:../common/LPC17xx_Startup.c ****  * it under the terms of the GNU General Public License as published by
   8:../common/LPC17xx_Startup.c ****  * the Free Software Foundation; either version 2, or (at your option)
   9:../common/LPC17xx_Startup.c ****  * any later version.
  10:../common/LPC17xx_Startup.c ****  *
  11:../common/LPC17xx_Startup.c ****  * This program is distributed in the hope that it will be useful,
  12:../common/LPC17xx_Startup.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:../common/LPC17xx_Startup.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:../common/LPC17xx_Startup.c ****  * GNU General Public License for more details.
  15:../common/LPC17xx_Startup.c ****  *
  16:../common/LPC17xx_Startup.c ****  * You should have received a copy of the GNU General Public License
  17:../common/LPC17xx_Startup.c ****  * along with this program; see the file COPYING.  If not, write to
  18:../common/LPC17xx_Startup.c ****  * the Free Software Foundation, Inc., 51 Franklin Street,
  19:../common/LPC17xx_Startup.c ****  * Boston, MA 02110-1301, USA.
  20:../common/LPC17xx_Startup.c ****  */
  21:../common/LPC17xx_Startup.c **** /*
  22:../common/LPC17xx_Startup.c ****   Copyright 2010-07 By Opendous Inc. (www.MicropendousX.org)
  23:../common/LPC17xx_Startup.c ****   NVIC handler info copied from NXP User Manual UM10360
  24:../common/LPC17xx_Startup.c **** 
  25:../common/LPC17xx_Startup.c ****   Start-up code for LPC17xx.  See TODOs for
  26:../common/LPC17xx_Startup.c ****   modification instructions.
  27:../common/LPC17xx_Startup.c **** 
  28:../common/LPC17xx_Startup.c ****   Permission to use, copy, modify, and distribute this software
  29:../common/LPC17xx_Startup.c ****   and its documentation for any purpose and without fee is hereby
  30:../common/LPC17xx_Startup.c ****   granted, provided that the above copyright notice appear in all
  31:../common/LPC17xx_Startup.c ****   copies and that both that the copyright notice and this
  32:../common/LPC17xx_Startup.c ****   permission notice and warranty disclaimer appear in supporting
ARM GAS  /tmp/ccInYcsT.s 			page 2


  33:../common/LPC17xx_Startup.c ****   documentation, and that the name of the author not be used in
  34:../common/LPC17xx_Startup.c ****   advertising or publicity pertaining to distribution of the
  35:../common/LPC17xx_Startup.c ****   software without specific, written prior permission.
  36:../common/LPC17xx_Startup.c **** 
  37:../common/LPC17xx_Startup.c ****   The author disclaim all warranties with regard to this
  38:../common/LPC17xx_Startup.c ****   software, including all implied warranties of merchantability
  39:../common/LPC17xx_Startup.c ****   and fitness.  In no event shall the author be liable for any
  40:../common/LPC17xx_Startup.c ****   special, indirect or consequential damages or any damages
  41:../common/LPC17xx_Startup.c ****   whatsoever resulting from loss of use, data or profits, whether
  42:../common/LPC17xx_Startup.c ****   in an action of contract, negligence or other tortious action,
  43:../common/LPC17xx_Startup.c ****   arising out of or in connection with the use or performance of
  44:../common/LPC17xx_Startup.c ****   this software.
  45:../common/LPC17xx_Startup.c **** */
  46:../common/LPC17xx_Startup.c **** 
  47:../common/LPC17xx_Startup.c **** #include <lpc17.h>
  48:../common/LPC17xx_Startup.c **** 
  49:../common/LPC17xx_Startup.c **** /* Reset_Handler variables defined in linker script */
  50:../common/LPC17xx_Startup.c **** extern unsigned long _interrupt_vector_table;
  51:../common/LPC17xx_Startup.c **** extern unsigned long _data;
  52:../common/LPC17xx_Startup.c **** extern unsigned long _edata;
  53:../common/LPC17xx_Startup.c **** extern unsigned long _etext;
  54:../common/LPC17xx_Startup.c **** extern unsigned long _bss;
  55:../common/LPC17xx_Startup.c **** extern unsigned long _ebss;
  56:../common/LPC17xx_Startup.c **** 
  57:../common/LPC17xx_Startup.c **** extern void __libc_init_array(void);
  58:../common/LPC17xx_Startup.c **** extern int main(void);
  59:../common/LPC17xx_Startup.c **** 
  60:../common/LPC17xx_Startup.c **** /* Reset Handler */
  61:../common/LPC17xx_Startup.c **** void Reset_Handler(void)
  62:../common/LPC17xx_Startup.c **** {
  27              		.loc 1 62 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
  63:../common/LPC17xx_Startup.c **** 	unsigned long *src, *dest;
  35              		.loc 1 63 2 view .LVU1
  64:../common/LPC17xx_Startup.c **** 
  65:../common/LPC17xx_Startup.c **** 	// Copy the data segment initializers from flash to SRAM
  66:../common/LPC17xx_Startup.c **** 	src = &_etext;
  36              		.loc 1 66 2 view .LVU2
  37              	.LVL0:
  67:../common/LPC17xx_Startup.c **** 	for(dest = &_data; dest < &_edata; )
  38              		.loc 1 67 2 view .LVU3
  39              		.loc 1 67 2 is_stmt 0 view .LVU4
  40 0002 0D4B     		ldr	r3, .L7
  66:../common/LPC17xx_Startup.c **** 	for(dest = &_data; dest < &_edata; )
  41              		.loc 1 66 6 view .LVU5
  42 0004 0D4A     		ldr	r2, .L7+4
  43              		.loc 1 67 2 view .LVU6
  44 0006 0E49     		ldr	r1, .L7+8
  45              	.LVL1:
  46              	.L2:
  47              		.loc 1 67 21 is_stmt 1 discriminator 1 view .LVU7
ARM GAS  /tmp/ccInYcsT.s 			page 3


  48              		.loc 1 67 2 is_stmt 0 discriminator 1 view .LVU8
  49 0008 8B42     		cmp	r3, r1
  50 000a 0CD3     		bcc	.L3
  68:../common/LPC17xx_Startup.c **** 	{
  69:../common/LPC17xx_Startup.c **** 		*dest++ = *src++;
  70:../common/LPC17xx_Startup.c **** 	}
  71:../common/LPC17xx_Startup.c **** 
  72:../common/LPC17xx_Startup.c **** 	// Initialize the .bss segment of memory to zeros
  73:../common/LPC17xx_Startup.c **** 	src = &_bss;
  74:../common/LPC17xx_Startup.c **** 	while (src < &_ebss)
  75:../common/LPC17xx_Startup.c **** 	{
  76:../common/LPC17xx_Startup.c **** 		*src++ = 0;
  51              		.loc 1 76 10 view .LVU9
  52 000c 0021     		movs	r1, #0
  73:../common/LPC17xx_Startup.c **** 	while (src < &_ebss)
  53              		.loc 1 73 6 view .LVU10
  54 000e 0D4B     		ldr	r3, .L7+12
  55              	.LVL2:
  74:../common/LPC17xx_Startup.c **** 	{
  56              		.loc 1 74 8 view .LVU11
  57 0010 0D4A     		ldr	r2, .L7+16
  58              	.LVL3:
  59              	.L4:
  74:../common/LPC17xx_Startup.c **** 	{
  60              		.loc 1 74 8 is_stmt 1 view .LVU12
  61 0012 9342     		cmp	r3, r2
  62 0014 0CD3     		bcc	.L5
  77:../common/LPC17xx_Startup.c **** 	}
  78:../common/LPC17xx_Startup.c **** 
  79:../common/LPC17xx_Startup.c **** 	__libc_init_array();
  63              		.loc 1 79 2 view .LVU13
  64 0016 FFF7FEFF 		bl	__libc_init_array
  65              	.LVL4:
  80:../common/LPC17xx_Startup.c **** 
  81:../common/LPC17xx_Startup.c **** 	// Set the vector table location.
  82:../common/LPC17xx_Startup.c **** 	SCB_VTOR = (uint32_t)&_interrupt_vector_table;
  66              		.loc 1 82 2 view .LVU14
  67              		.loc 1 82 11 is_stmt 0 view .LVU15
  68 001a 0C4A     		ldr	r2, .L7+20
  69 001c 0C4B     		ldr	r3, .L7+24
  70 001e 1A60     		str	r2, [r3]
  83:../common/LPC17xx_Startup.c **** 
  84:../common/LPC17xx_Startup.c **** 	main();
  71              		.loc 1 84 2 is_stmt 1 view .LVU16
  72 0020 FFF7FEFF 		bl	main
  73              	.LVL5:
  74              	.L6:
  85:../common/LPC17xx_Startup.c **** 
  86:../common/LPC17xx_Startup.c **** 	// In case main() fails, have something to breakpoint
  87:../common/LPC17xx_Startup.c **** 	while (1) {;}
  75              		.loc 1 87 2 discriminator 1 view .LVU17
  76              		.loc 1 87 13 discriminator 1 view .LVU18
  77              		.loc 1 87 8 discriminator 1 view .LVU19
  78 0024 FEE7     		b	.L6
  79              	.LVL6:
  80              	.L3:
  69:../common/LPC17xx_Startup.c **** 	}
ARM GAS  /tmp/ccInYcsT.s 			page 4


  81              		.loc 1 69 3 view .LVU20
  69:../common/LPC17xx_Startup.c **** 	}
  82              		.loc 1 69 11 is_stmt 0 view .LVU21
  83 0026 52F8040B 		ldr	r0, [r2], #4
  84              	.LVL7:
  69:../common/LPC17xx_Startup.c **** 	}
  85              		.loc 1 69 11 view .LVU22
  86 002a 43F8040B 		str	r0, [r3], #4
  87              	.LVL8:
  69:../common/LPC17xx_Startup.c **** 	}
  88              		.loc 1 69 11 view .LVU23
  89 002e EBE7     		b	.L2
  90              	.LVL9:
  91              	.L5:
  76:../common/LPC17xx_Startup.c **** 	}
  92              		.loc 1 76 3 is_stmt 1 view .LVU24
  76:../common/LPC17xx_Startup.c **** 	}
  93              		.loc 1 76 10 is_stmt 0 view .LVU25
  94 0030 43F8041B 		str	r1, [r3], #4
  95              	.LVL10:
  76:../common/LPC17xx_Startup.c **** 	}
  96              		.loc 1 76 10 view .LVU26
  97 0034 EDE7     		b	.L4
  98              	.L8:
  99 0036 00BF     		.align	2
 100              	.L7:
 101 0038 00000000 		.word	_data
 102 003c 00000000 		.word	_etext
 103 0040 00000000 		.word	_edata
 104 0044 00000000 		.word	_bss
 105 0048 00000000 		.word	_ebss
 106 004c 00000000 		.word	_interrupt_vector_table
 107 0050 08ED00E0 		.word	-536810232
 108              		.cfi_endproc
 109              	.LFE0:
 111              		.text
 112              	.Letext0:
 113              		.file 2 "/backup/ZEPHYR/AVATAR/root/gcc-arm-none-eabi-9-2020-q2-update/lib/gcc/arm-none-eabi/9.3.1
ARM GAS  /tmp/ccInYcsT.s 			page 5


DEFINED SYMBOLS
                            *ABS*:0000000000000000 LPC17xx_Startup.c
     /tmp/ccInYcsT.s:16     .text.Reset_Handler:0000000000000000 $t
     /tmp/ccInYcsT.s:24     .text.Reset_Handler:0000000000000000 Reset_Handler
     /tmp/ccInYcsT.s:101    .text.Reset_Handler:0000000000000038 $d

UNDEFINED SYMBOLS
__libc_init_array
main
_data
_etext
_edata
_bss
_ebss
_interrupt_vector_table
